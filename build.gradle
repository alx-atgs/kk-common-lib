/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

//Current version app
version =  '1.1.02'

// Java Compatibility
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
//defaultTasks = ['clean', 'jar']

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

	// Compile all jars from /libs
	compile fileTree(dir: 'lib', include: '*.jar')
	// Compile jar from current folder
	//compile files('PostgresqlService-1.1.01.jar','SOAPClientSAAJ-0.1.0.jar')
	//compile fileTree(dir: '.', include: '*.jar')
}

// Auto create file version.properties how resources with current version 
task createProperties() {
  doLast {
    //new File("$buildDir/classes/java/main/resources/version.properties").withWriter { w ->
    new File("$projectDir/src/main/resources/version.properties").withWriter { w ->
    //new File("$projectDir/version.properties").withWriter { w ->
        Properties p = new Properties()
        p['version'] = project.version.toString()
        p.store w, null
    }
  }
}
//processResources.dependsOn createProperties
classes {
    dependsOn createProperties
}

jar {

    baseName = 'kk-common-lib'

    manifest {
    	attributes	"Implementation-Title": "Common-lib by KK"
        attributes	'Implementation-Version': version
        attributes 	'Main-Class': 'kk.common.lib.CommonLibMain'
        }

 doFirst {
        manifest {
            if (!configurations.runtime.isEmpty()) {
                attributes('Class-Path':
                				//configurations.compile.collect { it.absolutePath }.join(" ") 
                                //configurations.runtime.collect{it.toURI().toString()}.join(' ')
                                configurations.runtime.collect { it.name }.join(' ')
                                )
           		
       		}
   		}
	}
}